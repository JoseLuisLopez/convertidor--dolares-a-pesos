/*
 * Created by SharpDevelop.
 * User: joseluis
 * Date: 29/10/2013
 * Time: 10:27 a. m.
 * 
 * To change this template use Tools | Options | Coding | Edit Standard Headers.
 */
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Windows.Forms;

namespace Convertidor
{
	/// <summary>
	/// Description of MainForm.
	/// </summary>
	public partial class MainForm : Form
	{
		public MainForm()
		{
			//
			// The InitializeComponent() call is required for Windows Forms designer support.
			//
			InitializeComponent();
			
			//
			// TODO: Add constructor code after the InitializeComponent() call.
			//
		}
		
		void PesoTextChanged(object sender, EventArgs e)
		{
			
		}
		
		void CambioTextChanged(object sender, EventArgs e)
		{
			
		}
		
		void DolaresTextChanged(object sender, EventArgs e)
		{
			
		}
		
		void ConvertirClick(object sender, EventArgs e)
		{
			double d, p, r;
			string c;
			
			if ( Peso.Text.Length == 0 || Cambio.Text.Length == 0){
				MessageBox.Show("El campo Pesos y Tipo de Cambio no pueden estar vacios!!!!",
				                "Advertencia", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
				return;
			}
			try {
				d = System.Double.Parse(Peso.Text);
				p = System.Double.Parse(Cambio.Text);
				
				
				
				r = d / p;
				
				c =Convert.ToString(r);
				if(Peso.Text == "" || Peso.Text == "0" || Peso.Text == "0.0")
					MessageBox.Show("Campo Peso(MX) vacio..");
				if(Cambio.Text == "" || Cambio.Text == "0" || Cambio.Text == "0.0"){
					MessageBox.Show("Campo Tasa (flexible) vacio!!");
					return;
				}
				
				
				Dolares.Text = c.ToString();

				
			}
			catch(Exception){
				
				MessageBox.Show("Datos Incorrectos........Haz introducido: ["+Peso.Text+"] y ["+Cambio.Text+"]");
				return;
			}
		}
		
		
		void PesoNum_keyPress(object sender, System.Windows.Forms.KeyPressEventArgs e)
		{
			{

				validaNumeroPunto(e);
			}
		}
		

		public void validaNumeroPunto(KeyPressEventArgs en)
		{

			if (!char.IsDigit(en.KeyChar) && en.KeyChar != (char)Keys.Back && en.KeyChar != 46)
			{
				MessageBox.Show("Solo se permiten numeros",
				                "Advertencia",MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
				en.Handled = true;
				return;
			}

			
		}
		
		
		
		void CambioNum_keyPress(object sender, KeyPressEventArgs e)
		{
			
			{

				validaNumero(e);
			}
		}
		

		public void validaNumero(KeyPressEventArgs en)
		{

			if (!char.IsDigit(en.KeyChar) && en.KeyChar != (char)Keys.Back && en.KeyChar != 46)
			{
				MessageBox.Show("Solo se permiten numeros",
				                "Advertencia",MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
				en.Handled = true;
				return;
			}
			
		}
		
		
		


		

		void DolaresNum_keyPress(object sender, KeyPressEventArgs e)
		{
			if (!(char.IsNumber(e.KeyChar)) && (e.KeyChar != (char)Keys.Back))
			{
				MessageBox.Show("Solo se permiten numeros", "Advertencia",
				                MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
				e.Handled = true;
				return;
			}

		}
		
		
		
		void Button1Click(object sender, EventArgs e)
		{
			foreach (Control c in this.Controls)
			{
				if (c is TextBox)
				{
					c.Text = "";
					this.Peso.Focus();

				}

			}
		}
	}

}
